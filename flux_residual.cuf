!
module flux_residual_mod
	!
	!
		use data_structure_mod
		use parameter_mod
		use data_allocation_mod
	!    
		use interior_flux_dGxpos_mod
		use interior_flux_dGxneg_mod
		use interior_flux_dGypos_mod
		use interior_flux_dGyneg_mod
		use interior_flux_dGzpos_mod
		use interior_flux_dGzneg_mod
	!
		use wall_flux_dGxpos_mod
		use wall_flux_dGxneg_mod
		use wall_flux_dGypos_mod
		use wall_flux_dGyneg_mod
		use wall_flux_dGzneg_mod
	!
		use outer_flux_dGxpos_mod
		use outer_flux_dGxneg_mod
		use outer_flux_dGypos_mod
		use outer_flux_dGyneg_mod
		use outer_flux_dGzpos_mod	   
	!	
	!
	contains
	!
	!
	attributes(global) subroutine residuals(flux_res1, wall_points_index1, outer_points_index1,&
	interior_points_index1, x1, y1, z1, tan1_device, tan2_device, nor_device, xpos_conn1, xneg_conn1, ypos_conn1, yneg_conn1, zpos_conn1, zneg_conn1, q2, dq2, wall_points1, &
	outer_points1, interior_points1, xpos_nbhs1, xneg_nbhs1, ypos_nbhs1, yneg_nbhs1,zpos_nbhs1, zneg_nbhs1, qm1, min_dist1, delt1, power1, conn1, nbhs1, VL_CONST, limiter_flag1)	
	!
	!
			implicit none
	!
			integer :: i, k
			real*8 :: Gxp(5), Gyp(5), Gzp(5)
			real*8 :: Gxn(5), Gyn(5), Gzn(5)
			integer, value :: wall_points1, outer_points1, interior_points1
			real*8, dimension(:,:), device :: flux_res1, q2, tan1_device, tan2_device, nor_device
			integer, dimension(:), device :: wall_points_index1, outer_points_index1, interior_points_index1
			real*8, dimension(:), device :: x1, y1, z1, min_dist1, delt1
			integer, dimension(:,:), device :: xpos_conn1, xneg_conn1, ypos_conn1, yneg_conn1, zpos_conn1, zneg_conn1, conn1
			real*8, dimension(:,:,:), device :: dq2, qm1
			real*8 :: qtilde(5), phi(5)
			integer, dimension(:), device:: xpos_nbhs1, xneg_nbhs1, ypos_nbhs1, yneg_nbhs1, zpos_nbhs1, zneg_nbhs1, nbhs1
			real*8, value :: power1, VL_CONST
			integer, value :: limiter_flag1
	
			i = threadIdx%x + (blockIdx%x - 1) * blockDim%x

			if ( i <= wall_points1) then
	!
				k = wall_points_index1(i)
	!
				call wall_dGx_pos(k, Gxp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xpos_conn1, xpos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call wall_dGx_neg(k, Gxn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xneg_conn1, xneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call wall_dGy_pos(k, Gyp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, ypos_conn1, ypos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi)
				call wall_dGy_neg(k, Gyn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, yneg_conn1, yneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi)
				call wall_dGz_neg(k, Gzn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, conn1, nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi)            
	!
				flux_res1(:,k) = 2.0d0*delt1(k)*(Gxp + Gxn + Gyp + Gyn + Gzn)
	!
			endif
	!
			if ( i <= outer_points1) then
	!
				k = outer_points_index1(i)
	!
				call outer_dGx_pos(k, Gxp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xpos_conn1, xpos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi)
				call outer_dGx_neg(k, Gxn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xneg_conn1, xneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call outer_dGy_pos(k, Gyp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, ypos_conn1, ypos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call outer_dGy_neg(k, Gyn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, yneg_conn1, yneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call outer_dGz_pos(k, Gzp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, conn1, nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 			
	!
				flux_res1(:,k) = delt1(k) * (Gxp + Gxn + Gyp + Gyn + Gzp)
	!
			endif
	!
			if ( i <= interior_points1) then 
	!
				k = interior_points_index1(i)
	!
				call interior_dGx_pos(k, Gxp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xpos_conn1, xpos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call interior_dGx_neg(k, Gxn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, xneg_conn1, xneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call interior_dGy_pos(k, Gyp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, ypos_conn1, ypos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call interior_dGy_neg(k, Gyn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, yneg_conn1, yneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call interior_dGz_pos(k, Gzp, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, zpos_conn1, zpos_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 
				call interior_dGz_neg(k, Gzn, x1, y1, z1, tan1_device, tan2_device, nor_device, q2, dq2, zneg_conn1, zneg_nbhs1, qm1, min_dist1, power1,VL_CONST,limiter_flag1, qtilde, phi) 			
	!
				flux_res1(:,k) = delt1(k) * (Gxp + Gxn + Gyp + Gyn + Gzp + Gzn)
	!
			endif
	!
	!
		end subroutine

		subroutine eval_flux_residual()

			implicit none

			integer, parameter :: tPB=128
			
			call residuals<<<ceiling(real(max_points)/tPB), tPB>>>(d_flux_res, d_wall_points_index, d_outer_points_index,&
			 d_interior_points_index, d_x, d_y, d_z, d_tan1, d_tan2, d_nor, d_xpos_conn, d_xneg_conn, d_ypos_conn, d_yneg_conn, d_zpos_conn, d_zneg_conn, d_q, d_dq_temp, wall_points, &
			 outer_points, interior_points, d_xpos_nbhs, d_xneg_nbhs, d_ypos_nbhs, d_yneg_nbhs, d_zpos_nbhs, d_zneg_nbhs, d_qm, d_min_dist, d_delt, power, d_conn, d_nbhs, VL_CONST, limiter_flag)

		end subroutine
	!
	!
	end module flux_residual_mod
	